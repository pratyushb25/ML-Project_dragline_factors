{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praty\\\\Desktop\\\\DF_interface\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State hooks for each input\n  const [dragline, setDragline] = useState('');\n  const [method, setMethod] = useState('');\n  const [dip, setDip] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputData = {\n      dragline,\n      method,\n      dip /* ...continue for other inputs */\n    };\n    console.log(inputData);\n    // Here you would send inputData to your ML model API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inputs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Dragline\",\n        value: dragline,\n        onChange: e => setDragline(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Method\",\n        value: method,\n        onChange: e => setMethod(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Dip\",\n        value: dip,\n        onChange: e => setDip(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: \"box-shadow: 0px 7px 30px -10px rgba(var(--color_primary_default_rgb), 0.08); background-color: var(--color_primary_contrast_default); font-family: var(--font_default); font-size: 15px; font-weight: 600; color: var(--color_primary_default); text-align: center; line-height: 1.4; border-style: solid; border-width: 1px; border-color: var(--color_primary_default); border-radius: 5px; padding: 12px 16px; opacity: 1; transition: background 200ms ease 0s; cursor: pointer; align-self: center; min-width: 150px; max-width: 150px; order: 9; min-height: 45px; height: max-content; flex-grow: 0; flex-shrink: 0; width: 150px; margin: 50px 0px 0px; z-index: 6; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\",\n        children: \"Run Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dXMzANnpF3msWqTaQd75spiKL6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","dragline","setDragline","method","setMethod","dip","setDip","handleSubmit","event","preventDefault","inputData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","style","_c","$RefreshReg$"],"sources":["C:/Users/Praty/Desktop/DF_interface/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // State hooks for each input\n  const [dragline, setDragline] = useState('');\n  const [method, setMethod] = useState('');\n  const [dip, setDip] = useState('');\n\n\n  // Function to handle form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const inputData = { dragline, method, dip /* ...continue for other inputs */ };\n    console.log(inputData);\n    // Here you would send inputData to your ML model API\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Inputs</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Dragline\" value={dragline} onChange={(e) => setDragline(e.target.value)} />\n        <input type=\"text\" placeholder=\"Method\" value={method} onChange={(e) => setMethod(e.target.value)} />\n        <input type=\"number\" placeholder=\"Dip\" value={dip} onChange={(e) => setDip(e.target.value)} />\n        {/* ...continue for other inputs */}\n        <button type=\"submit\" style=\"box-shadow: 0px 7px 30px -10px rgba(var(--color_primary_default_rgb), 0.08); background-color: var(--color_primary_contrast_default); font-family: var(--font_default); font-size: 15px; font-weight: 600; color: var(--color_primary_default); text-align: center; line-height: 1.4; border-style: solid; border-width: 1px; border-color: var(--color_primary_default); border-radius: 5px; padding: 12px 16px; opacity: 1; transition: background 200ms ease 0s; cursor: pointer; align-self: center; min-width: 150px; max-width: 150px; order: 9; min-height: 45px; height: max-content; flex-grow: 0; flex-shrink: 0; width: 150px; margin: 50px 0px 0px; z-index: 6; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"\n>Run Model</button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAGlC;EACA,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,SAAS,GAAG;MAAET,QAAQ;MAAEE,MAAM;MAAEE,GAAG,CAAC;IAAmC,CAAC;IAC9EM,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA;MAAMqB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3BhB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAErB,QAAS;QAACsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3GpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,QAAQ;QAACC,KAAK,EAAEnB,MAAO;QAACoB,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGpB,OAAA;QAAOsB,IAAI,EAAC,QAAQ;QAACC,WAAW,EAAC,KAAK;QAACC,KAAK,EAAEjB,GAAI;QAACkB,QAAQ,EAAGC,CAAC,IAAKlB,MAAM,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE9FpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACM,KAAK,EAAC,+0BAA+0B;QAAAZ,QAAA,EACl3B;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CA5BQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}